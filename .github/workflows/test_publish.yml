name: Build, test, publish

env:
  CI: true
  B2B_FLAVOUR: PREOPS
  B2B_ENDPOINT: https://b2b-proxy.4me.im/
  B2B_XSD_REMOTE_URL: https://wsdl.b2B-proxy.4me.im/26.0.0.tar.gz
  B2B_API_KEY_ID: ${{ secrets.B2B_API_KEY_ID }}
  B2B_API_SECRET_KEY: ${{ secrets.B2B_API_SECRET_KEY }}
  # REAL_B2B_CONNECTIONS: true

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  # Test the lib, runs on every commit
  test:
    runs-on: ubuntu-latest

    env:
      # This will enable real b2b connections on node 16 and if secrets.B2B_API_KEY_ID is set
      REAL_B2B_CONNECTIONS: ${{ matrix.node-version == '18.x' && secrets.B2B_API_KEY_ID && '1' || '' }}

    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: '[GH Cache] yarn'
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-

      - name: 'Create b2b-xsd folder'
        run: mkdir b2b-xsd && touch b2b-xsd/.ghcache

      - name: '[GH Cache] B2B XSD'
        uses: actions/cache@v3
        with:
          path: 'b2b-xsd'
          key: ${{ runner.os }}-b2b-xsd-${{ hashFiles('**/b2b-xsd/**')}}
          restore-keys: |
            ${{ runner.os }}-b2b-xsd

      - name: 'Install deps'
        run: yarn

      - name: 'TypeScript check'
        run: yarn typecheck

      - name: 'Build'
        run: yarn build

      - name: 'Download B2B WSDL'
        run: yarn downloadWSDL

      - name: 'Run test suite'
        run: yarn test:ci

      - name: 'Upload coverage'
        uses: codecov/codecov-action@v1
        if: env.REAL_B2B_CONNECTIONS == '1'
        with:
          fail_ci_if_error: true

  # Publish package to npm
  deploy-packages:
    if: github.repository == 'DGAC/nmb2b-client-js' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: '[GH Cache] yarn'
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-

      - name: Install deps
        run: yarn

      - name: Build
        run: yarn build

      - name: deploy packages
        run: yarn publish --non-interactive
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
